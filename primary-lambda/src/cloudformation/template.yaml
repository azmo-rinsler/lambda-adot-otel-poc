AWSTemplateFormatVersion: 2010-09-09
# This 'Transform' bit tells AWS to use SAM (Serverless Application Model) to process this template, which has a few
# differences from using standard CloudFormation. (e.g., we can use Policies instead of having to specify a Role ARN)
Transform: AWS::Serverless-2016-10-31
Description: Minimal Java ${project.java.version} AWS Lambda using OpenTelemetry via ADOT Layer

Resources:
  PrimaryLambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://${aws.s3.bucket}/${project.artifactId}-${project.version}.jar
      Runtime: java${project.java.version} # e.g., java17
      Handler: PrimaryLambdaHandler::handleRequest
      FunctionName: ${project.artifactId}-${project.version}
      Timeout: 30 # seconds range: [1, 900]
      MemorySize: 512 # MB range: [128, 10240]
      Policies:
        - AWSLambdaBasicExecutionRole
        # Tells the primary lambda that it has permission to invoke the secondary one
        - Statement:
          - Effect: Allow
            Action: lambda:InvokeFunction
            Resource: !ImportValue SecondaryLambdaArn${aws.secondary.lambda.version}

      Layers:
        # This is the Amazon Distribution of OpenTelemetry (ADOT) Layer for Java
        - arn:aws:lambda:${aws.region}:901920570463:layer:aws-otel-java-wrapper-${aws.architecture}-ver-1-32-0:6

      Environment:
        Variables:
          AWS_LAMBDA_EXEC_WRAPPER: /opt/otel-stream-handler # Used by the ADOT Layer to wrap the handler (wrapper layer)
          AWS_SECONDARY_LAMBDA_VERSION: ${aws.secondary.lambda.version}

      Tracing: Active # Active tracing must be enabled for the ADOT layer to work properly

  # Tells the secondary lambda that it has permission to BE invoked by the primary one
  SecondaryLambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !ImportValue SecondaryLambdaArn${aws.secondary.lambda.version}
      Action: lambda:InvokeFunction
      Principal: lambda.amazonaws.com
      SourceArn: !GetAtt PrimaryLambda.Arn

# Exports the ARN of this function for use in other CloudFormation stacks
Outputs:
  PrimaryLambdaArnExport:
    Value: !GetAtt PrimaryLambda.Arn
    Export:
      Name: PrimaryLambdaArn